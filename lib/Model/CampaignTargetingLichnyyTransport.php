<?php
/**
 * CampaignTargetingLichnyyTransport
 *
 * PHP version 5
 *
 * @category Class
 * @package  AnketologClient
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Anketolog API v2.0
 *
 * ### Клиенты:  * [**PHP**](https://github.com/anketolog/AnketologClient-php)  ### Клиенты на других языках:  * Скачайте конфигурационный [swagger-файл](https://anketolog.ru/api/external/v2/docs/Anketolog.yaml) * Воспользуйтесь официальным [генератором](http://swagger.io/swagger-codegen/)   ([список поддерживаемых языков](https://github.com/swagger-api/swagger-codegen#api-clients))
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace AnketologClient\Model;

use \ArrayAccess;

/**
 * CampaignTargetingLichnyyTransport Class Doc Comment
 *
 * @category    Class */
 // @description Группа &#x60;Личный транспорт&#x60; (+10 руб. к стоимости ответа)
/** 
 * @package     AnketologClient
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class CampaignTargetingLichnyyTransport implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'CampaignTargetingLichnyyTransport';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'is_enable' => 'bool',
        'nalichie_voditelskih_prav' => 'string[]',
        'kategoriya_prav' => 'string[]',
        'nalichie_avtomobilya' => 'string[]',
        'marka_avtomobilya' => 'string[]',
        'god_vypuska_from' => 'string[]',
        'god_vypuska_to' => 'string[]',
        'drugie_transportnye_sredstva' => 'string[]',
        'uslugi_avtoservisa' => 'string[]',
        'avtotovary' => 'string[]'
    );

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'is_enable' => 'is_enable',
        'nalichie_voditelskih_prav' => 'nalichie_voditelskih_prav',
        'kategoriya_prav' => 'kategoriya_prav',
        'nalichie_avtomobilya' => 'nalichie_avtomobilya',
        'marka_avtomobilya' => 'marka_avtomobilya',
        'god_vypuska_from' => 'god_vypuska_from',
        'god_vypuska_to' => 'god_vypuska_to',
        'drugie_transportnye_sredstva' => 'drugie_transportnye_sredstva',
        'uslugi_avtoservisa' => 'uslugi_avtoservisa',
        'avtotovary' => 'avtotovary'
    );

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'is_enable' => 'setIsEnable',
        'nalichie_voditelskih_prav' => 'setNalichieVoditelskihPrav',
        'kategoriya_prav' => 'setKategoriyaPrav',
        'nalichie_avtomobilya' => 'setNalichieAvtomobilya',
        'marka_avtomobilya' => 'setMarkaAvtomobilya',
        'god_vypuska_from' => 'setGodVypuskaFrom',
        'god_vypuska_to' => 'setGodVypuskaTo',
        'drugie_transportnye_sredstva' => 'setDrugieTransportnyeSredstva',
        'uslugi_avtoservisa' => 'setUslugiAvtoservisa',
        'avtotovary' => 'setAvtotovary'
    );

    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'is_enable' => 'getIsEnable',
        'nalichie_voditelskih_prav' => 'getNalichieVoditelskihPrav',
        'kategoriya_prav' => 'getKategoriyaPrav',
        'nalichie_avtomobilya' => 'getNalichieAvtomobilya',
        'marka_avtomobilya' => 'getMarkaAvtomobilya',
        'god_vypuska_from' => 'getGodVypuskaFrom',
        'god_vypuska_to' => 'getGodVypuskaTo',
        'drugie_transportnye_sredstva' => 'getDrugieTransportnyeSredstva',
        'uslugi_avtoservisa' => 'getUslugiAvtoservisa',
        'avtotovary' => 'getAvtotovary'
    );

    public static function getters()
    {
        return self::$getters;
    }

    const NALICHIE_VODITELSKIH_PRAV__0 = 'option_0';
    const NALICHIE_VODITELSKIH_PRAV__1 = 'option_1';
    const KATEGORIYA_PRAV__0 = 'option_0';
    const KATEGORIYA_PRAV__1 = 'option_1';
    const KATEGORIYA_PRAV__2 = 'option_2';
    const KATEGORIYA_PRAV__3 = 'option_3';
    const KATEGORIYA_PRAV__4 = 'option_4';
    const KATEGORIYA_PRAV__5 = 'option_5';
    const KATEGORIYA_PRAV__6 = 'option_6';
    const NALICHIE_AVTOMOBILYA__0 = 'option_0';
    const NALICHIE_AVTOMOBILYA__1 = 'option_1';
    const NALICHIE_AVTOMOBILYA__2 = 'option_2';
    const MARKA_AVTOMOBILYA__0 = 'option_0';
    const MARKA_AVTOMOBILYA__1 = 'option_1';
    const MARKA_AVTOMOBILYA__2 = 'option_2';
    const MARKA_AVTOMOBILYA__3 = 'option_3';
    const MARKA_AVTOMOBILYA__4 = 'option_4';
    const MARKA_AVTOMOBILYA__5 = 'option_5';
    const MARKA_AVTOMOBILYA__6 = 'option_6';
    const MARKA_AVTOMOBILYA__7 = 'option_7';
    const MARKA_AVTOMOBILYA__8 = 'option_8';
    const MARKA_AVTOMOBILYA__9 = 'option_9';
    const MARKA_AVTOMOBILYA__10 = 'option_10';
    const MARKA_AVTOMOBILYA__11 = 'option_11';
    const MARKA_AVTOMOBILYA__12 = 'option_12';
    const MARKA_AVTOMOBILYA__13 = 'option_13';
    const MARKA_AVTOMOBILYA__14 = 'option_14';
    const MARKA_AVTOMOBILYA__15 = 'option_15';
    const MARKA_AVTOMOBILYA__16 = 'option_16';
    const MARKA_AVTOMOBILYA__17 = 'option_17';
    const MARKA_AVTOMOBILYA__18 = 'option_18';
    const MARKA_AVTOMOBILYA__19 = 'option_19';
    const MARKA_AVTOMOBILYA__20 = 'option_20';
    const MARKA_AVTOMOBILYA__21 = 'option_21';
    const MARKA_AVTOMOBILYA__22 = 'option_22';
    const MARKA_AVTOMOBILYA__23 = 'option_23';
    const MARKA_AVTOMOBILYA__24 = 'option_24';
    const MARKA_AVTOMOBILYA__25 = 'option_25';
    const MARKA_AVTOMOBILYA__26 = 'option_26';
    const MARKA_AVTOMOBILYA__27 = 'option_27';
    const MARKA_AVTOMOBILYA__28 = 'option_28';
    const MARKA_AVTOMOBILYA__29 = 'option_29';
    const MARKA_AVTOMOBILYA__30 = 'option_30';
    const MARKA_AVTOMOBILYA__31 = 'option_31';
    const MARKA_AVTOMOBILYA__32 = 'option_32';
    const MARKA_AVTOMOBILYA__33 = 'option_33';
    const MARKA_AVTOMOBILYA__34 = 'option_34';
    const MARKA_AVTOMOBILYA__35 = 'option_35';
    const MARKA_AVTOMOBILYA__36 = 'option_36';
    const MARKA_AVTOMOBILYA__37 = 'option_37';
    const MARKA_AVTOMOBILYA__38 = 'option_38';
    const MARKA_AVTOMOBILYA__39 = 'option_39';
    const MARKA_AVTOMOBILYA__40 = 'option_40';
    const MARKA_AVTOMOBILYA__41 = 'option_41';
    const MARKA_AVTOMOBILYA__42 = 'option_42';
    const MARKA_AVTOMOBILYA__43 = 'option_43';
    const MARKA_AVTOMOBILYA__44 = 'option_44';
    const MARKA_AVTOMOBILYA__45 = 'option_45';
    const MARKA_AVTOMOBILYA__46 = 'option_46';
    const MARKA_AVTOMOBILYA__47 = 'option_47';
    const MARKA_AVTOMOBILYA__48 = 'option_48';
    const MARKA_AVTOMOBILYA__49 = 'option_49';
    const MARKA_AVTOMOBILYA__50 = 'option_50';
    const MARKA_AVTOMOBILYA__51 = 'option_51';
    const MARKA_AVTOMOBILYA__52 = 'option_52';
    const MARKA_AVTOMOBILYA__53 = 'option_53';
    const MARKA_AVTOMOBILYA__54 = 'option_54';
    const MARKA_AVTOMOBILYA__55 = 'option_55';
    const MARKA_AVTOMOBILYA__56 = 'option_56';
    const MARKA_AVTOMOBILYA__57 = 'option_57';
    const MARKA_AVTOMOBILYA__58 = 'option_58';
    const MARKA_AVTOMOBILYA__59 = 'option_59';
    const MARKA_AVTOMOBILYA__60 = 'option_60';
    const MARKA_AVTOMOBILYA__61 = 'option_61';
    const MARKA_AVTOMOBILYA__62 = 'option_62';
    const MARKA_AVTOMOBILYA__63 = 'option_63';
    const MARKA_AVTOMOBILYA__64 = 'option_64';
    const MARKA_AVTOMOBILYA__65 = 'option_65';
    const MARKA_AVTOMOBILYA__66 = 'option_66';
    const MARKA_AVTOMOBILYA__67 = 'option_67';
    const MARKA_AVTOMOBILYA__68 = 'option_68';
    const MARKA_AVTOMOBILYA__69 = 'option_69';
    const MARKA_AVTOMOBILYA__70 = 'option_70';
    const MARKA_AVTOMOBILYA__71 = 'option_71';
    const MARKA_AVTOMOBILYA__72 = 'option_72';
    const MARKA_AVTOMOBILYA__73 = 'option_73';
    const MARKA_AVTOMOBILYA__74 = 'option_74';
    const MARKA_AVTOMOBILYA__75 = 'option_75';
    const MARKA_AVTOMOBILYA__76 = 'option_76';
    const MARKA_AVTOMOBILYA__77 = 'option_77';
    const MARKA_AVTOMOBILYA__78 = 'option_78';
    const MARKA_AVTOMOBILYA__79 = 'option_79';
    const MARKA_AVTOMOBILYA__80 = 'option_80';
    const MARKA_AVTOMOBILYA__81 = 'option_81';
    const MARKA_AVTOMOBILYA__82 = 'option_82';
    const MARKA_AVTOMOBILYA__83 = 'option_83';
    const MARKA_AVTOMOBILYA__84 = 'option_84';
    const MARKA_AVTOMOBILYA__85 = 'option_85';
    const MARKA_AVTOMOBILYA__86 = 'option_86';
    const MARKA_AVTOMOBILYA__87 = 'option_87';
    const MARKA_AVTOMOBILYA__88 = 'option_88';
    const MARKA_AVTOMOBILYA__89 = 'option_89';
    const MARKA_AVTOMOBILYA__90 = 'option_90';
    const MARKA_AVTOMOBILYA__91 = 'option_91';
    const MARKA_AVTOMOBILYA__92 = 'option_92';
    const MARKA_AVTOMOBILYA__93 = 'option_93';
    const MARKA_AVTOMOBILYA__94 = 'option_94';
    const GOD_VYPUSKA_FROM__2017 = '2017';
    const GOD_VYPUSKA_FROM__2016 = '2016';
    const GOD_VYPUSKA_FROM__2015 = '2015';
    const GOD_VYPUSKA_FROM__2014 = '2014';
    const GOD_VYPUSKA_FROM__2013 = '2013';
    const GOD_VYPUSKA_FROM__2012 = '2012';
    const GOD_VYPUSKA_FROM__2011 = '2011';
    const GOD_VYPUSKA_FROM__2010 = '2010';
    const GOD_VYPUSKA_FROM__2009 = '2009';
    const GOD_VYPUSKA_FROM__2008 = '2008';
    const GOD_VYPUSKA_FROM__2007 = '2007';
    const GOD_VYPUSKA_FROM__2006 = '2006';
    const GOD_VYPUSKA_FROM__2005 = '2005';
    const GOD_VYPUSKA_FROM__2004 = '2004';
    const GOD_VYPUSKA_FROM__2003 = '2003';
    const GOD_VYPUSKA_FROM__2002 = '2002';
    const GOD_VYPUSKA_FROM__2001 = '2001';
    const GOD_VYPUSKA_FROM__2000 = '2000';
    const GOD_VYPUSKA_FROM__1999 = '1999';
    const GOD_VYPUSKA_FROM__1998 = '1998';
    const GOD_VYPUSKA_FROM__1997 = '1997';
    const GOD_VYPUSKA_FROM__1996 = '1996';
    const GOD_VYPUSKA_FROM__1995 = '1995';
    const GOD_VYPUSKA_FROM__1994 = '1994';
    const GOD_VYPUSKA_FROM__1993 = '1993';
    const GOD_VYPUSKA_FROM__1992 = '1992';
    const GOD_VYPUSKA_FROM__1991 = '1991';
    const GOD_VYPUSKA_FROM__1990 = '1990';
    const GOD_VYPUSKA_FROM__1989 = '1989';
    const GOD_VYPUSKA_FROM__1988 = '1988';
    const GOD_VYPUSKA_FROM__1987 = '1987';
    const GOD_VYPUSKA_FROM__1986 = '1986';
    const GOD_VYPUSKA_FROM__1985 = '1985';
    const GOD_VYPUSKA_FROM__1984 = '1984';
    const GOD_VYPUSKA_FROM__1983 = '1983';
    const GOD_VYPUSKA_FROM__1982 = '1982';
    const GOD_VYPUSKA_FROM__1981 = '1981';
    const GOD_VYPUSKA_FROM__1980 = '1980';
    const GOD_VYPUSKA_FROM__1979 = '1979';
    const GOD_VYPUSKA_FROM__1978 = '1978';
    const GOD_VYPUSKA_FROM__1977 = '1977';
    const GOD_VYPUSKA_FROM__1976 = '1976';
    const GOD_VYPUSKA_FROM__1975 = '1975';
    const GOD_VYPUSKA_FROM__1974 = '1974';
    const GOD_VYPUSKA_FROM__1973 = '1973';
    const GOD_VYPUSKA_FROM__1972 = '1972';
    const GOD_VYPUSKA_FROM__1971 = '1971';
    const GOD_VYPUSKA_FROM__1970 = '1970';
    const GOD_VYPUSKA_FROM__1969 = '1969';
    const GOD_VYPUSKA_FROM__1968 = '1968';
    const GOD_VYPUSKA_FROM__1967 = '1967';
    const GOD_VYPUSKA_FROM__1966 = '1966';
    const GOD_VYPUSKA_FROM__1965 = '1965';
    const GOD_VYPUSKA_FROM__1964 = '1964';
    const GOD_VYPUSKA_FROM__1963 = '1963';
    const GOD_VYPUSKA_FROM__1962 = '1962';
    const GOD_VYPUSKA_FROM__1961 = '1961';
    const GOD_VYPUSKA_FROM__1960 = '1960';
    const GOD_VYPUSKA_FROM__1959 = '1959';
    const GOD_VYPUSKA_FROM__1958 = '1958';
    const GOD_VYPUSKA_FROM__1957 = '1957';
    const GOD_VYPUSKA_FROM__1956 = '1956';
    const GOD_VYPUSKA_FROM__1955 = '1955';
    const GOD_VYPUSKA_FROM__1954 = '1954';
    const GOD_VYPUSKA_FROM__1953 = '1953';
    const GOD_VYPUSKA_FROM__1952 = '1952';
    const GOD_VYPUSKA_FROM__1951 = '1951';
    const GOD_VYPUSKA_FROM__1950 = '1950';
    const GOD_VYPUSKA_TO__2017 = '2017';
    const GOD_VYPUSKA_TO__2016 = '2016';
    const GOD_VYPUSKA_TO__2015 = '2015';
    const GOD_VYPUSKA_TO__2014 = '2014';
    const GOD_VYPUSKA_TO__2013 = '2013';
    const GOD_VYPUSKA_TO__2012 = '2012';
    const GOD_VYPUSKA_TO__2011 = '2011';
    const GOD_VYPUSKA_TO__2010 = '2010';
    const GOD_VYPUSKA_TO__2009 = '2009';
    const GOD_VYPUSKA_TO__2008 = '2008';
    const GOD_VYPUSKA_TO__2007 = '2007';
    const GOD_VYPUSKA_TO__2006 = '2006';
    const GOD_VYPUSKA_TO__2005 = '2005';
    const GOD_VYPUSKA_TO__2004 = '2004';
    const GOD_VYPUSKA_TO__2003 = '2003';
    const GOD_VYPUSKA_TO__2002 = '2002';
    const GOD_VYPUSKA_TO__2001 = '2001';
    const GOD_VYPUSKA_TO__2000 = '2000';
    const GOD_VYPUSKA_TO__1999 = '1999';
    const GOD_VYPUSKA_TO__1998 = '1998';
    const GOD_VYPUSKA_TO__1997 = '1997';
    const GOD_VYPUSKA_TO__1996 = '1996';
    const GOD_VYPUSKA_TO__1995 = '1995';
    const GOD_VYPUSKA_TO__1994 = '1994';
    const GOD_VYPUSKA_TO__1993 = '1993';
    const GOD_VYPUSKA_TO__1992 = '1992';
    const GOD_VYPUSKA_TO__1991 = '1991';
    const GOD_VYPUSKA_TO__1990 = '1990';
    const GOD_VYPUSKA_TO__1989 = '1989';
    const GOD_VYPUSKA_TO__1988 = '1988';
    const GOD_VYPUSKA_TO__1987 = '1987';
    const GOD_VYPUSKA_TO__1986 = '1986';
    const GOD_VYPUSKA_TO__1985 = '1985';
    const GOD_VYPUSKA_TO__1984 = '1984';
    const GOD_VYPUSKA_TO__1983 = '1983';
    const GOD_VYPUSKA_TO__1982 = '1982';
    const GOD_VYPUSKA_TO__1981 = '1981';
    const GOD_VYPUSKA_TO__1980 = '1980';
    const GOD_VYPUSKA_TO__1979 = '1979';
    const GOD_VYPUSKA_TO__1978 = '1978';
    const GOD_VYPUSKA_TO__1977 = '1977';
    const GOD_VYPUSKA_TO__1976 = '1976';
    const GOD_VYPUSKA_TO__1975 = '1975';
    const GOD_VYPUSKA_TO__1974 = '1974';
    const GOD_VYPUSKA_TO__1973 = '1973';
    const GOD_VYPUSKA_TO__1972 = '1972';
    const GOD_VYPUSKA_TO__1971 = '1971';
    const GOD_VYPUSKA_TO__1970 = '1970';
    const GOD_VYPUSKA_TO__1969 = '1969';
    const GOD_VYPUSKA_TO__1968 = '1968';
    const GOD_VYPUSKA_TO__1967 = '1967';
    const GOD_VYPUSKA_TO__1966 = '1966';
    const GOD_VYPUSKA_TO__1965 = '1965';
    const GOD_VYPUSKA_TO__1964 = '1964';
    const GOD_VYPUSKA_TO__1963 = '1963';
    const GOD_VYPUSKA_TO__1962 = '1962';
    const GOD_VYPUSKA_TO__1961 = '1961';
    const GOD_VYPUSKA_TO__1960 = '1960';
    const GOD_VYPUSKA_TO__1959 = '1959';
    const GOD_VYPUSKA_TO__1958 = '1958';
    const GOD_VYPUSKA_TO__1957 = '1957';
    const GOD_VYPUSKA_TO__1956 = '1956';
    const GOD_VYPUSKA_TO__1955 = '1955';
    const GOD_VYPUSKA_TO__1954 = '1954';
    const GOD_VYPUSKA_TO__1953 = '1953';
    const GOD_VYPUSKA_TO__1952 = '1952';
    const GOD_VYPUSKA_TO__1951 = '1951';
    const GOD_VYPUSKA_TO__1950 = '1950';
    const DRUGIE_TRANSPORTNYE_SREDSTVA__0 = 'option_0';
    const DRUGIE_TRANSPORTNYE_SREDSTVA__1 = 'option_1';
    const DRUGIE_TRANSPORTNYE_SREDSTVA__2 = 'option_2';
    const DRUGIE_TRANSPORTNYE_SREDSTVA__3 = 'option_3';
    const DRUGIE_TRANSPORTNYE_SREDSTVA__4 = 'option_4';
    const DRUGIE_TRANSPORTNYE_SREDSTVA__5 = 'option_5';
    const DRUGIE_TRANSPORTNYE_SREDSTVA__6 = 'option_6';
    const DRUGIE_TRANSPORTNYE_SREDSTVA__7 = 'option_7';
    const USLUGI_AVTOSERVISA__0 = 'option_0';
    const USLUGI_AVTOSERVISA__1 = 'option_1';
    const AVTOTOVARY__0 = 'option_0';
    const AVTOTOVARY__1 = 'option_1';
    const AVTOTOVARY__2 = 'option_2';
    const AVTOTOVARY__3 = 'option_3';
    const AVTOTOVARY__4 = 'option_4';
    const AVTOTOVARY__5 = 'option_5';
    const AVTOTOVARY__6 = 'option_6';
    const AVTOTOVARY__7 = 'option_7';
    const AVTOTOVARY__8 = 'option_8';
    const AVTOTOVARY__9 = 'option_9';
    const AVTOTOVARY__10 = 'option_10';
    const AVTOTOVARY__11 = 'option_11';
    const AVTOTOVARY__12 = 'option_12';
    const AVTOTOVARY__13 = 'option_13';
    const AVTOTOVARY__14 = 'option_14';
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getNalichieVoditelskihPravAllowableValues()
    {
        return [
            self::NALICHIE_VODITELSKIH_PRAV__0,
            self::NALICHIE_VODITELSKIH_PRAV__1,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getKategoriyaPravAllowableValues()
    {
        return [
            self::KATEGORIYA_PRAV__0,
            self::KATEGORIYA_PRAV__1,
            self::KATEGORIYA_PRAV__2,
            self::KATEGORIYA_PRAV__3,
            self::KATEGORIYA_PRAV__4,
            self::KATEGORIYA_PRAV__5,
            self::KATEGORIYA_PRAV__6,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getNalichieAvtomobilyaAllowableValues()
    {
        return [
            self::NALICHIE_AVTOMOBILYA__0,
            self::NALICHIE_AVTOMOBILYA__1,
            self::NALICHIE_AVTOMOBILYA__2,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getMarkaAvtomobilyaAllowableValues()
    {
        return [
            self::MARKA_AVTOMOBILYA__0,
            self::MARKA_AVTOMOBILYA__1,
            self::MARKA_AVTOMOBILYA__2,
            self::MARKA_AVTOMOBILYA__3,
            self::MARKA_AVTOMOBILYA__4,
            self::MARKA_AVTOMOBILYA__5,
            self::MARKA_AVTOMOBILYA__6,
            self::MARKA_AVTOMOBILYA__7,
            self::MARKA_AVTOMOBILYA__8,
            self::MARKA_AVTOMOBILYA__9,
            self::MARKA_AVTOMOBILYA__10,
            self::MARKA_AVTOMOBILYA__11,
            self::MARKA_AVTOMOBILYA__12,
            self::MARKA_AVTOMOBILYA__13,
            self::MARKA_AVTOMOBILYA__14,
            self::MARKA_AVTOMOBILYA__15,
            self::MARKA_AVTOMOBILYA__16,
            self::MARKA_AVTOMOBILYA__17,
            self::MARKA_AVTOMOBILYA__18,
            self::MARKA_AVTOMOBILYA__19,
            self::MARKA_AVTOMOBILYA__20,
            self::MARKA_AVTOMOBILYA__21,
            self::MARKA_AVTOMOBILYA__22,
            self::MARKA_AVTOMOBILYA__23,
            self::MARKA_AVTOMOBILYA__24,
            self::MARKA_AVTOMOBILYA__25,
            self::MARKA_AVTOMOBILYA__26,
            self::MARKA_AVTOMOBILYA__27,
            self::MARKA_AVTOMOBILYA__28,
            self::MARKA_AVTOMOBILYA__29,
            self::MARKA_AVTOMOBILYA__30,
            self::MARKA_AVTOMOBILYA__31,
            self::MARKA_AVTOMOBILYA__32,
            self::MARKA_AVTOMOBILYA__33,
            self::MARKA_AVTOMOBILYA__34,
            self::MARKA_AVTOMOBILYA__35,
            self::MARKA_AVTOMOBILYA__36,
            self::MARKA_AVTOMOBILYA__37,
            self::MARKA_AVTOMOBILYA__38,
            self::MARKA_AVTOMOBILYA__39,
            self::MARKA_AVTOMOBILYA__40,
            self::MARKA_AVTOMOBILYA__41,
            self::MARKA_AVTOMOBILYA__42,
            self::MARKA_AVTOMOBILYA__43,
            self::MARKA_AVTOMOBILYA__44,
            self::MARKA_AVTOMOBILYA__45,
            self::MARKA_AVTOMOBILYA__46,
            self::MARKA_AVTOMOBILYA__47,
            self::MARKA_AVTOMOBILYA__48,
            self::MARKA_AVTOMOBILYA__49,
            self::MARKA_AVTOMOBILYA__50,
            self::MARKA_AVTOMOBILYA__51,
            self::MARKA_AVTOMOBILYA__52,
            self::MARKA_AVTOMOBILYA__53,
            self::MARKA_AVTOMOBILYA__54,
            self::MARKA_AVTOMOBILYA__55,
            self::MARKA_AVTOMOBILYA__56,
            self::MARKA_AVTOMOBILYA__57,
            self::MARKA_AVTOMOBILYA__58,
            self::MARKA_AVTOMOBILYA__59,
            self::MARKA_AVTOMOBILYA__60,
            self::MARKA_AVTOMOBILYA__61,
            self::MARKA_AVTOMOBILYA__62,
            self::MARKA_AVTOMOBILYA__63,
            self::MARKA_AVTOMOBILYA__64,
            self::MARKA_AVTOMOBILYA__65,
            self::MARKA_AVTOMOBILYA__66,
            self::MARKA_AVTOMOBILYA__67,
            self::MARKA_AVTOMOBILYA__68,
            self::MARKA_AVTOMOBILYA__69,
            self::MARKA_AVTOMOBILYA__70,
            self::MARKA_AVTOMOBILYA__71,
            self::MARKA_AVTOMOBILYA__72,
            self::MARKA_AVTOMOBILYA__73,
            self::MARKA_AVTOMOBILYA__74,
            self::MARKA_AVTOMOBILYA__75,
            self::MARKA_AVTOMOBILYA__76,
            self::MARKA_AVTOMOBILYA__77,
            self::MARKA_AVTOMOBILYA__78,
            self::MARKA_AVTOMOBILYA__79,
            self::MARKA_AVTOMOBILYA__80,
            self::MARKA_AVTOMOBILYA__81,
            self::MARKA_AVTOMOBILYA__82,
            self::MARKA_AVTOMOBILYA__83,
            self::MARKA_AVTOMOBILYA__84,
            self::MARKA_AVTOMOBILYA__85,
            self::MARKA_AVTOMOBILYA__86,
            self::MARKA_AVTOMOBILYA__87,
            self::MARKA_AVTOMOBILYA__88,
            self::MARKA_AVTOMOBILYA__89,
            self::MARKA_AVTOMOBILYA__90,
            self::MARKA_AVTOMOBILYA__91,
            self::MARKA_AVTOMOBILYA__92,
            self::MARKA_AVTOMOBILYA__93,
            self::MARKA_AVTOMOBILYA__94,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getGodVypuskaFromAllowableValues()
    {
        return [
            self::GOD_VYPUSKA_FROM__2017,
            self::GOD_VYPUSKA_FROM__2016,
            self::GOD_VYPUSKA_FROM__2015,
            self::GOD_VYPUSKA_FROM__2014,
            self::GOD_VYPUSKA_FROM__2013,
            self::GOD_VYPUSKA_FROM__2012,
            self::GOD_VYPUSKA_FROM__2011,
            self::GOD_VYPUSKA_FROM__2010,
            self::GOD_VYPUSKA_FROM__2009,
            self::GOD_VYPUSKA_FROM__2008,
            self::GOD_VYPUSKA_FROM__2007,
            self::GOD_VYPUSKA_FROM__2006,
            self::GOD_VYPUSKA_FROM__2005,
            self::GOD_VYPUSKA_FROM__2004,
            self::GOD_VYPUSKA_FROM__2003,
            self::GOD_VYPUSKA_FROM__2002,
            self::GOD_VYPUSKA_FROM__2001,
            self::GOD_VYPUSKA_FROM__2000,
            self::GOD_VYPUSKA_FROM__1999,
            self::GOD_VYPUSKA_FROM__1998,
            self::GOD_VYPUSKA_FROM__1997,
            self::GOD_VYPUSKA_FROM__1996,
            self::GOD_VYPUSKA_FROM__1995,
            self::GOD_VYPUSKA_FROM__1994,
            self::GOD_VYPUSKA_FROM__1993,
            self::GOD_VYPUSKA_FROM__1992,
            self::GOD_VYPUSKA_FROM__1991,
            self::GOD_VYPUSKA_FROM__1990,
            self::GOD_VYPUSKA_FROM__1989,
            self::GOD_VYPUSKA_FROM__1988,
            self::GOD_VYPUSKA_FROM__1987,
            self::GOD_VYPUSKA_FROM__1986,
            self::GOD_VYPUSKA_FROM__1985,
            self::GOD_VYPUSKA_FROM__1984,
            self::GOD_VYPUSKA_FROM__1983,
            self::GOD_VYPUSKA_FROM__1982,
            self::GOD_VYPUSKA_FROM__1981,
            self::GOD_VYPUSKA_FROM__1980,
            self::GOD_VYPUSKA_FROM__1979,
            self::GOD_VYPUSKA_FROM__1978,
            self::GOD_VYPUSKA_FROM__1977,
            self::GOD_VYPUSKA_FROM__1976,
            self::GOD_VYPUSKA_FROM__1975,
            self::GOD_VYPUSKA_FROM__1974,
            self::GOD_VYPUSKA_FROM__1973,
            self::GOD_VYPUSKA_FROM__1972,
            self::GOD_VYPUSKA_FROM__1971,
            self::GOD_VYPUSKA_FROM__1970,
            self::GOD_VYPUSKA_FROM__1969,
            self::GOD_VYPUSKA_FROM__1968,
            self::GOD_VYPUSKA_FROM__1967,
            self::GOD_VYPUSKA_FROM__1966,
            self::GOD_VYPUSKA_FROM__1965,
            self::GOD_VYPUSKA_FROM__1964,
            self::GOD_VYPUSKA_FROM__1963,
            self::GOD_VYPUSKA_FROM__1962,
            self::GOD_VYPUSKA_FROM__1961,
            self::GOD_VYPUSKA_FROM__1960,
            self::GOD_VYPUSKA_FROM__1959,
            self::GOD_VYPUSKA_FROM__1958,
            self::GOD_VYPUSKA_FROM__1957,
            self::GOD_VYPUSKA_FROM__1956,
            self::GOD_VYPUSKA_FROM__1955,
            self::GOD_VYPUSKA_FROM__1954,
            self::GOD_VYPUSKA_FROM__1953,
            self::GOD_VYPUSKA_FROM__1952,
            self::GOD_VYPUSKA_FROM__1951,
            self::GOD_VYPUSKA_FROM__1950,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getGodVypuskaToAllowableValues()
    {
        return [
            self::GOD_VYPUSKA_TO__2017,
            self::GOD_VYPUSKA_TO__2016,
            self::GOD_VYPUSKA_TO__2015,
            self::GOD_VYPUSKA_TO__2014,
            self::GOD_VYPUSKA_TO__2013,
            self::GOD_VYPUSKA_TO__2012,
            self::GOD_VYPUSKA_TO__2011,
            self::GOD_VYPUSKA_TO__2010,
            self::GOD_VYPUSKA_TO__2009,
            self::GOD_VYPUSKA_TO__2008,
            self::GOD_VYPUSKA_TO__2007,
            self::GOD_VYPUSKA_TO__2006,
            self::GOD_VYPUSKA_TO__2005,
            self::GOD_VYPUSKA_TO__2004,
            self::GOD_VYPUSKA_TO__2003,
            self::GOD_VYPUSKA_TO__2002,
            self::GOD_VYPUSKA_TO__2001,
            self::GOD_VYPUSKA_TO__2000,
            self::GOD_VYPUSKA_TO__1999,
            self::GOD_VYPUSKA_TO__1998,
            self::GOD_VYPUSKA_TO__1997,
            self::GOD_VYPUSKA_TO__1996,
            self::GOD_VYPUSKA_TO__1995,
            self::GOD_VYPUSKA_TO__1994,
            self::GOD_VYPUSKA_TO__1993,
            self::GOD_VYPUSKA_TO__1992,
            self::GOD_VYPUSKA_TO__1991,
            self::GOD_VYPUSKA_TO__1990,
            self::GOD_VYPUSKA_TO__1989,
            self::GOD_VYPUSKA_TO__1988,
            self::GOD_VYPUSKA_TO__1987,
            self::GOD_VYPUSKA_TO__1986,
            self::GOD_VYPUSKA_TO__1985,
            self::GOD_VYPUSKA_TO__1984,
            self::GOD_VYPUSKA_TO__1983,
            self::GOD_VYPUSKA_TO__1982,
            self::GOD_VYPUSKA_TO__1981,
            self::GOD_VYPUSKA_TO__1980,
            self::GOD_VYPUSKA_TO__1979,
            self::GOD_VYPUSKA_TO__1978,
            self::GOD_VYPUSKA_TO__1977,
            self::GOD_VYPUSKA_TO__1976,
            self::GOD_VYPUSKA_TO__1975,
            self::GOD_VYPUSKA_TO__1974,
            self::GOD_VYPUSKA_TO__1973,
            self::GOD_VYPUSKA_TO__1972,
            self::GOD_VYPUSKA_TO__1971,
            self::GOD_VYPUSKA_TO__1970,
            self::GOD_VYPUSKA_TO__1969,
            self::GOD_VYPUSKA_TO__1968,
            self::GOD_VYPUSKA_TO__1967,
            self::GOD_VYPUSKA_TO__1966,
            self::GOD_VYPUSKA_TO__1965,
            self::GOD_VYPUSKA_TO__1964,
            self::GOD_VYPUSKA_TO__1963,
            self::GOD_VYPUSKA_TO__1962,
            self::GOD_VYPUSKA_TO__1961,
            self::GOD_VYPUSKA_TO__1960,
            self::GOD_VYPUSKA_TO__1959,
            self::GOD_VYPUSKA_TO__1958,
            self::GOD_VYPUSKA_TO__1957,
            self::GOD_VYPUSKA_TO__1956,
            self::GOD_VYPUSKA_TO__1955,
            self::GOD_VYPUSKA_TO__1954,
            self::GOD_VYPUSKA_TO__1953,
            self::GOD_VYPUSKA_TO__1952,
            self::GOD_VYPUSKA_TO__1951,
            self::GOD_VYPUSKA_TO__1950,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getDrugieTransportnyeSredstvaAllowableValues()
    {
        return [
            self::DRUGIE_TRANSPORTNYE_SREDSTVA__0,
            self::DRUGIE_TRANSPORTNYE_SREDSTVA__1,
            self::DRUGIE_TRANSPORTNYE_SREDSTVA__2,
            self::DRUGIE_TRANSPORTNYE_SREDSTVA__3,
            self::DRUGIE_TRANSPORTNYE_SREDSTVA__4,
            self::DRUGIE_TRANSPORTNYE_SREDSTVA__5,
            self::DRUGIE_TRANSPORTNYE_SREDSTVA__6,
            self::DRUGIE_TRANSPORTNYE_SREDSTVA__7,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getUslugiAvtoservisaAllowableValues()
    {
        return [
            self::USLUGI_AVTOSERVISA__0,
            self::USLUGI_AVTOSERVISA__1,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getAvtotovaryAllowableValues()
    {
        return [
            self::AVTOTOVARY__0,
            self::AVTOTOVARY__1,
            self::AVTOTOVARY__2,
            self::AVTOTOVARY__3,
            self::AVTOTOVARY__4,
            self::AVTOTOVARY__5,
            self::AVTOTOVARY__6,
            self::AVTOTOVARY__7,
            self::AVTOTOVARY__8,
            self::AVTOTOVARY__9,
            self::AVTOTOVARY__10,
            self::AVTOTOVARY__11,
            self::AVTOTOVARY__12,
            self::AVTOTOVARY__13,
            self::AVTOTOVARY__14,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['is_enable'] = isset($data['is_enable']) ? $data['is_enable'] : null;
        $this->container['nalichie_voditelskih_prav'] = isset($data['nalichie_voditelskih_prav']) ? $data['nalichie_voditelskih_prav'] : null;
        $this->container['kategoriya_prav'] = isset($data['kategoriya_prav']) ? $data['kategoriya_prav'] : null;
        $this->container['nalichie_avtomobilya'] = isset($data['nalichie_avtomobilya']) ? $data['nalichie_avtomobilya'] : null;
        $this->container['marka_avtomobilya'] = isset($data['marka_avtomobilya']) ? $data['marka_avtomobilya'] : null;
        $this->container['god_vypuska_from'] = isset($data['god_vypuska_from']) ? $data['god_vypuska_from'] : null;
        $this->container['god_vypuska_to'] = isset($data['god_vypuska_to']) ? $data['god_vypuska_to'] : null;
        $this->container['drugie_transportnye_sredstva'] = isset($data['drugie_transportnye_sredstva']) ? $data['drugie_transportnye_sredstva'] : null;
        $this->container['uslugi_avtoservisa'] = isset($data['uslugi_avtoservisa']) ? $data['uslugi_avtoservisa'] : null;
        $this->container['avtotovary'] = isset($data['avtotovary']) ? $data['avtotovary'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets is_enable
     * @return bool
     */
    public function getIsEnable()
    {
        return $this->container['is_enable'];
    }

    /**
     * Sets is_enable
     * @param bool $is_enable Группа включена
     * @return $this
     */
    public function setIsEnable($is_enable)
    {
        $this->container['is_enable'] = $is_enable;

        return $this;
    }

    /**
     * Gets nalichie_voditelskih_prav
     * @return string[]
     */
    public function getNalichieVoditelskihPrav()
    {
        return $this->container['nalichie_voditelskih_prav'];
    }

    /**
     * Sets nalichie_voditelskih_prav
     * @param string[] $nalichie_voditelskih_prav Параметр `Наличие водительских прав`  * `option_0` - есть * `option_1` - нет
     * @return $this
     */
    public function setNalichieVoditelskihPrav($nalichie_voditelskih_prav)
    {
        $allowed_values = array('option_0', 'option_1');
        if (!in_array($nalichie_voditelskih_prav, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'nalichie_voditelskih_prav', must be one of 'option_0', 'option_1'");
        }
        $this->container['nalichie_voditelskih_prav'] = $nalichie_voditelskih_prav;

        return $this;
    }

    /**
     * Gets kategoriya_prav
     * @return string[]
     */
    public function getKategoriyaPrav()
    {
        return $this->container['kategoriya_prav'];
    }

    /**
     * Sets kategoriya_prav
     * @param string[] $kategoriya_prav Параметр `Категория прав`  * `option_0` - А * `option_1` - В * `option_2` - C * `option_3` - D * `option_4` - E * `option_5` - M * `option_6` - Tb/Tm
     * @return $this
     */
    public function setKategoriyaPrav($kategoriya_prav)
    {
        $allowed_values = array('option_0', 'option_1', 'option_2', 'option_3', 'option_4', 'option_5', 'option_6');
        if (!in_array($kategoriya_prav, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'kategoriya_prav', must be one of 'option_0', 'option_1', 'option_2', 'option_3', 'option_4', 'option_5', 'option_6'");
        }
        $this->container['kategoriya_prav'] = $kategoriya_prav;

        return $this;
    }

    /**
     * Gets nalichie_avtomobilya
     * @return string[]
     */
    public function getNalichieAvtomobilya()
    {
        return $this->container['nalichie_avtomobilya'];
    }

    /**
     * Sets nalichie_avtomobilya
     * @param string[] $nalichie_avtomobilya Параметр `Наличие автомобиля`  * `option_0` - собственный автомобиль (несколько автомобилей) * `option_1` - нет собственного, но есть автомобиль в пользовании (служебный, автомобиль друга и т. д.) * `option_2` - нет автомобиля
     * @return $this
     */
    public function setNalichieAvtomobilya($nalichie_avtomobilya)
    {
        $allowed_values = array('option_0', 'option_1', 'option_2');
        if (!in_array($nalichie_avtomobilya, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'nalichie_avtomobilya', must be one of 'option_0', 'option_1', 'option_2'");
        }
        $this->container['nalichie_avtomobilya'] = $nalichie_avtomobilya;

        return $this;
    }

    /**
     * Gets marka_avtomobilya
     * @return string[]
     */
    public function getMarkaAvtomobilya()
    {
        return $this->container['marka_avtomobilya'];
    }

    /**
     * Sets marka_avtomobilya
     * @param string[] $marka_avtomobilya Параметр `Марка автомобиля`  * `option_0` - AC * `option_1` - Acura * `option_2` - Alfa Romeo * `option_3` - Alpina * `option_4` - Asia * `option_5` - Aston Martin * `option_6` - Audi * `option_7` - BMW * `option_8` - BYDCadillac * `option_9` - Bentley * `option_10` - Brilliance * `option_11` - Buick * `option_12` - Changan * `option_13` - Chery * `option_14` - Chevrolet * `option_15` - Chrysler * `option_16` - Citroen * `option_17` - Dacia * `option_18` - Daewoo * `option_19` - Daihatsu * `option_20` - Datsun * `option_21` - Derways * `option_22` - Dodge * `option_23` - Eagle * `option_24` - FAW * `option_25` - Ferrari * `option_26` - Fiat * `option_27` - Ford * `option_28` - GMC * `option_29` - Geely * `option_30` - Great Wall * `option_31` - Hafei * `option_32` - Haima * `option_33` - Honda * `option_34` - Hummer * `option_35` - Hyundai * `option_36` - Infiniti * `option_37` - Iran Khodro * `option_38` - Isuzu * `option_39` - Jaguar * `option_40` - Jeep * `option_41` - Kia * `option_42` - Koenigsegg * `option_43` - Lamborghini * `option_44` - Lancia * `option_45` - Land Rover * `option_46` - Lexus * `option_47` - Lifan * `option_48` - Lincoln * `option_49` - Luxgen * `option_50` - Maserati * `option_51` - Maybach * `option_52` - Mazda * `option_53` - McLaren * `option_54` - Mercedes-Benz * `option_55` - Mercury * `option_56` - Mini * `option_57` - Mitsubishi * `option_58` - Mitsuoka * `option_59` - Nissan * `option_60` - Oldsmobile * `option_61` - Opel * `option_62` - Peugeot * `option_63` - Plymouth * `option_64` - Pontiac * `option_65` - Porsche * `option_66` - Proton * `option_67` - Renault * `option_68` - Renault Samsung * `option_69` - Rolls-Royce * `option_70` - Rover * `option_71` - SEAT * `option_72` - Saab * `option_73` - Saturn * `option_74` - Scion * `option_75` - Skoda * `option_76` - Smart * `option_77` - SsangYong * `option_78` - Subaru * `option_79` - Suzuki * `option_80` - Tesla * `option_81` - Tianye * `option_82` - Toyota * `option_83` - Volkswagen * `option_84` - Volvo * `option_85` - Vortex * `option_86` - Xin Kai * `option_87` - ГАЗ * `option_88` - ЗАЗ * `option_89` - ИЖ * `option_90` - Лада * `option_91` - ЛуАЗ * `option_92` - Москвич * `option_93` - ТагАЗ * `option_94` - УАЗ
     * @return $this
     */
    public function setMarkaAvtomobilya($marka_avtomobilya)
    {
        $allowed_values = array('option_0', 'option_1', 'option_2', 'option_3', 'option_4', 'option_5', 'option_6', 'option_7', 'option_8', 'option_9', 'option_10', 'option_11', 'option_12', 'option_13', 'option_14', 'option_15', 'option_16', 'option_17', 'option_18', 'option_19', 'option_20', 'option_21', 'option_22', 'option_23', 'option_24', 'option_25', 'option_26', 'option_27', 'option_28', 'option_29', 'option_30', 'option_31', 'option_32', 'option_33', 'option_34', 'option_35', 'option_36', 'option_37', 'option_38', 'option_39', 'option_40', 'option_41', 'option_42', 'option_43', 'option_44', 'option_45', 'option_46', 'option_47', 'option_48', 'option_49', 'option_50', 'option_51', 'option_52', 'option_53', 'option_54', 'option_55', 'option_56', 'option_57', 'option_58', 'option_59', 'option_60', 'option_61', 'option_62', 'option_63', 'option_64', 'option_65', 'option_66', 'option_67', 'option_68', 'option_69', 'option_70', 'option_71', 'option_72', 'option_73', 'option_74', 'option_75', 'option_76', 'option_77', 'option_78', 'option_79', 'option_80', 'option_81', 'option_82', 'option_83', 'option_84', 'option_85', 'option_86', 'option_87', 'option_88', 'option_89', 'option_90', 'option_91', 'option_92', 'option_93', 'option_94');
        if (!in_array($marka_avtomobilya, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'marka_avtomobilya', must be one of 'option_0', 'option_1', 'option_2', 'option_3', 'option_4', 'option_5', 'option_6', 'option_7', 'option_8', 'option_9', 'option_10', 'option_11', 'option_12', 'option_13', 'option_14', 'option_15', 'option_16', 'option_17', 'option_18', 'option_19', 'option_20', 'option_21', 'option_22', 'option_23', 'option_24', 'option_25', 'option_26', 'option_27', 'option_28', 'option_29', 'option_30', 'option_31', 'option_32', 'option_33', 'option_34', 'option_35', 'option_36', 'option_37', 'option_38', 'option_39', 'option_40', 'option_41', 'option_42', 'option_43', 'option_44', 'option_45', 'option_46', 'option_47', 'option_48', 'option_49', 'option_50', 'option_51', 'option_52', 'option_53', 'option_54', 'option_55', 'option_56', 'option_57', 'option_58', 'option_59', 'option_60', 'option_61', 'option_62', 'option_63', 'option_64', 'option_65', 'option_66', 'option_67', 'option_68', 'option_69', 'option_70', 'option_71', 'option_72', 'option_73', 'option_74', 'option_75', 'option_76', 'option_77', 'option_78', 'option_79', 'option_80', 'option_81', 'option_82', 'option_83', 'option_84', 'option_85', 'option_86', 'option_87', 'option_88', 'option_89', 'option_90', 'option_91', 'option_92', 'option_93', 'option_94'");
        }
        $this->container['marka_avtomobilya'] = $marka_avtomobilya;

        return $this;
    }

    /**
     * Gets god_vypuska_from
     * @return string[]
     */
    public function getGodVypuskaFrom()
    {
        return $this->container['god_vypuska_from'];
    }

    /**
     * Sets god_vypuska_from
     * @param string[] $god_vypuska_from Параметр `Год выпуска от`  * `2017` - 2017 * `2016` - 2016 * `2015` - 2015 * `2014` - 2014 * `2013` - 2013 * `2012` - 2012 * `2011` - 2011 * `2010` - 2010 * `2009` - 2009 * `2008` - 2008 * `2007` - 2007 * `2006` - 2006 * `2005` - 2005 * `2004` - 2004 * `2003` - 2003 * `2002` - 2002 * `2001` - 2001 * `2000` - 2000 * `1999` - 1999 * `1998` - 1998 * `1997` - 1997 * `1996` - 1996 * `1995` - 1995 * `1994` - 1994 * `1993` - 1993 * `1992` - 1992 * `1991` - 1991 * `1990` - 1990 * `1989` - 1989 * `1988` - 1988 * `1987` - 1987 * `1986` - 1986 * `1985` - 1985 * `1984` - 1984 * `1983` - 1983 * `1982` - 1982 * `1981` - 1981 * `1980` - 1980 * `1979` - 1979 * `1978` - 1978 * `1977` - 1977 * `1976` - 1976 * `1975` - 1975 * `1974` - 1974 * `1973` - 1973 * `1972` - 1972 * `1971` - 1971 * `1970` - 1970 * `1969` - 1969 * `1968` - 1968 * `1967` - 1967 * `1966` - 1966 * `1965` - 1965 * `1964` - 1964 * `1963` - 1963 * `1962` - 1962 * `1961` - 1961 * `1960` - 1960 * `1959` - 1959 * `1958` - 1958 * `1957` - 1957 * `1956` - 1956 * `1955` - 1955 * `1954` - 1954 * `1953` - 1953 * `1952` - 1952 * `1951` - 1951 * `1950` - 1950
     * @return $this
     */
    public function setGodVypuskaFrom($god_vypuska_from)
    {
        $allowed_values = array('2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999', '1998', '1997', '1996', '1995', '1994', '1993', '1992', '1991', '1990', '1989', '1988', '1987', '1986', '1985', '1984', '1983', '1982', '1981', '1980', '1979', '1978', '1977', '1976', '1975', '1974', '1973', '1972', '1971', '1970', '1969', '1968', '1967', '1966', '1965', '1964', '1963', '1962', '1961', '1960', '1959', '1958', '1957', '1956', '1955', '1954', '1953', '1952', '1951', '1950');
        if (!in_array($god_vypuska_from, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'god_vypuska_from', must be one of '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999', '1998', '1997', '1996', '1995', '1994', '1993', '1992', '1991', '1990', '1989', '1988', '1987', '1986', '1985', '1984', '1983', '1982', '1981', '1980', '1979', '1978', '1977', '1976', '1975', '1974', '1973', '1972', '1971', '1970', '1969', '1968', '1967', '1966', '1965', '1964', '1963', '1962', '1961', '1960', '1959', '1958', '1957', '1956', '1955', '1954', '1953', '1952', '1951', '1950'");
        }
        $this->container['god_vypuska_from'] = $god_vypuska_from;

        return $this;
    }

    /**
     * Gets god_vypuska_to
     * @return string[]
     */
    public function getGodVypuskaTo()
    {
        return $this->container['god_vypuska_to'];
    }

    /**
     * Sets god_vypuska_to
     * @param string[] $god_vypuska_to Параметр `Год выпуска до`  * `2017` - 2017 * `2016` - 2016 * `2015` - 2015 * `2014` - 2014 * `2013` - 2013 * `2012` - 2012 * `2011` - 2011 * `2010` - 2010 * `2009` - 2009 * `2008` - 2008 * `2007` - 2007 * `2006` - 2006 * `2005` - 2005 * `2004` - 2004 * `2003` - 2003 * `2002` - 2002 * `2001` - 2001 * `2000` - 2000 * `1999` - 1999 * `1998` - 1998 * `1997` - 1997 * `1996` - 1996 * `1995` - 1995 * `1994` - 1994 * `1993` - 1993 * `1992` - 1992 * `1991` - 1991 * `1990` - 1990 * `1989` - 1989 * `1988` - 1988 * `1987` - 1987 * `1986` - 1986 * `1985` - 1985 * `1984` - 1984 * `1983` - 1983 * `1982` - 1982 * `1981` - 1981 * `1980` - 1980 * `1979` - 1979 * `1978` - 1978 * `1977` - 1977 * `1976` - 1976 * `1975` - 1975 * `1974` - 1974 * `1973` - 1973 * `1972` - 1972 * `1971` - 1971 * `1970` - 1970 * `1969` - 1969 * `1968` - 1968 * `1967` - 1967 * `1966` - 1966 * `1965` - 1965 * `1964` - 1964 * `1963` - 1963 * `1962` - 1962 * `1961` - 1961 * `1960` - 1960 * `1959` - 1959 * `1958` - 1958 * `1957` - 1957 * `1956` - 1956 * `1955` - 1955 * `1954` - 1954 * `1953` - 1953 * `1952` - 1952 * `1951` - 1951 * `1950` - 1950
     * @return $this
     */
    public function setGodVypuskaTo($god_vypuska_to)
    {
        $allowed_values = array('2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999', '1998', '1997', '1996', '1995', '1994', '1993', '1992', '1991', '1990', '1989', '1988', '1987', '1986', '1985', '1984', '1983', '1982', '1981', '1980', '1979', '1978', '1977', '1976', '1975', '1974', '1973', '1972', '1971', '1970', '1969', '1968', '1967', '1966', '1965', '1964', '1963', '1962', '1961', '1960', '1959', '1958', '1957', '1956', '1955', '1954', '1953', '1952', '1951', '1950');
        if (!in_array($god_vypuska_to, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'god_vypuska_to', must be one of '2017', '2016', '2015', '2014', '2013', '2012', '2011', '2010', '2009', '2008', '2007', '2006', '2005', '2004', '2003', '2002', '2001', '2000', '1999', '1998', '1997', '1996', '1995', '1994', '1993', '1992', '1991', '1990', '1989', '1988', '1987', '1986', '1985', '1984', '1983', '1982', '1981', '1980', '1979', '1978', '1977', '1976', '1975', '1974', '1973', '1972', '1971', '1970', '1969', '1968', '1967', '1966', '1965', '1964', '1963', '1962', '1961', '1960', '1959', '1958', '1957', '1956', '1955', '1954', '1953', '1952', '1951', '1950'");
        }
        $this->container['god_vypuska_to'] = $god_vypuska_to;

        return $this;
    }

    /**
     * Gets drugie_transportnye_sredstva
     * @return string[]
     */
    public function getDrugieTransportnyeSredstva()
    {
        return $this->container['drugie_transportnye_sredstva'];
    }

    /**
     * Sets drugie_transportnye_sredstva
     * @param string[] $drugie_transportnye_sredstva Параметр `Другие транспортные средства`  * `option_0` - мотороллер * `option_1` - мотоцикл * `option_2` - снегоход * `option_3` - скутер * `option_4` - лодка * `option_5` - моторная лодка * `option_6` - фургон * `option_7` - вездеход (автомобиль повышенной проходимости)
     * @return $this
     */
    public function setDrugieTransportnyeSredstva($drugie_transportnye_sredstva)
    {
        $allowed_values = array('option_0', 'option_1', 'option_2', 'option_3', 'option_4', 'option_5', 'option_6', 'option_7');
        if (!in_array($drugie_transportnye_sredstva, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'drugie_transportnye_sredstva', must be one of 'option_0', 'option_1', 'option_2', 'option_3', 'option_4', 'option_5', 'option_6', 'option_7'");
        }
        $this->container['drugie_transportnye_sredstva'] = $drugie_transportnye_sredstva;

        return $this;
    }

    /**
     * Gets uslugi_avtoservisa
     * @return string[]
     */
    public function getUslugiAvtoservisa()
    {
        return $this->container['uslugi_avtoservisa'];
    }

    /**
     * Sets uslugi_avtoservisa
     * @param string[] $uslugi_avtoservisa Параметр `Пользование услугами автосервиса`  * `option_0` - пользовался услугами * `option_1` - не пользовался услугами
     * @return $this
     */
    public function setUslugiAvtoservisa($uslugi_avtoservisa)
    {
        $allowed_values = array('option_0', 'option_1');
        if (!in_array($uslugi_avtoservisa, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'uslugi_avtoservisa', must be one of 'option_0', 'option_1'");
        }
        $this->container['uslugi_avtoservisa'] = $uslugi_avtoservisa;

        return $this;
    }

    /**
     * Gets avtotovary
     * @return string[]
     */
    public function getAvtotovary()
    {
        return $this->container['avtotovary'];
    }

    /**
     * Sets avtotovary
     * @param string[] $avtotovary Параметр `Приобретаемые категории автотоваров`  * `option_0` - Шины * `option_1` - Колесные диски * `option_2` - Аккумулятор * `option_3` - Чехлы и накидки * `option_4` - Масло и технические жидкости * `option_5` - Автозапчасти * `option_6` - Сигнализация * `option_7` - Минимойка * `option_8` - Автосвет * `option_9` - Автоэлектрика * `option_10` - Щетки, скребки, омыватели * `option_11` - Автокраска, лак * `option_12` - Автохимия и косметика * `option_13` - Автоковры * `option_14` - Автоаксессуары
     * @return $this
     */
    public function setAvtotovary($avtotovary)
    {
        $allowed_values = array('option_0', 'option_1', 'option_2', 'option_3', 'option_4', 'option_5', 'option_6', 'option_7', 'option_8', 'option_9', 'option_10', 'option_11', 'option_12', 'option_13', 'option_14');
        if (!in_array($avtotovary, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'avtotovary', must be one of 'option_0', 'option_1', 'option_2', 'option_3', 'option_4', 'option_5', 'option_6', 'option_7', 'option_8', 'option_9', 'option_10', 'option_11', 'option_12', 'option_13', 'option_14'");
        }
        $this->container['avtotovary'] = $avtotovary;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\AnketologClient\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\AnketologClient\ObjectSerializer::sanitizeForSerialization($this));
    }
}


