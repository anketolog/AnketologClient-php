<?php
/**
 * CampaignTargetingSemyaIDeti
 *
 * PHP version 5
 *
 * @category Class
 * @package  AnketologClient
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Документация к Анкетолог API (beta-версия)
 *
 * ### Библиотеки для работы с API  * **PHP** https://github.com/anketolog/AnketologClient-php  ### Библиотеки на других языках  Вы можете самостоятельно сгенерировать библиотеку, [на любом доступном языке](https://github.com/swagger-api/swagger-codegen#api-clients), воспользовавшись [генератором](http://swagger.io/swagger-codegen). Конфигурационный файл можно скачать по [этой ссылке](https://anketolog.ru/api/external/v2/anketolog.yaml).  ### Работа с API  Работа с API осуществляется при помощи отправки POST-запросов на адрес:  ``` https://apiv2.anketolog.ru/{resource} ```  Необходимые параметры передаются в теле запроса в виде JSON-строки:  ``` {     \"survey_id\": \"ID опроса\" } ```  Для авторизации необходимо передать заголовок **X-Anketolog-ApiKey** в запросе:  ``` X-Anketolog-ApiKey: API_KEY ```  Ключ доступа к API можно получить в [разделе настроек](https://anketolog.ru/user/account/apikey).   ### Пример запроса  ``` curl -X POST \\   --header 'X-Anketolog-ApiKey: API_KEY' \\   -d '{\"survey_id\": \"ID опроса\"}' \\   'https://apiv2.anketolog.ru/survey/manage/info' ```  ### Webhook  Webhook – это уведомление сторонних приложений о событиях, произошедших на сайте anketolog.ru, путем отправки уведомлений. Во время возникновения события сервер посылает POST-запрос по адресу, который указан в URL. Настроить Webhook можно в [разделе настроек](https://anketolog.loc/user/account/apikey).
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace AnketologClient\Model;

use \ArrayAccess;

/**
 * CampaignTargetingSemyaIDeti Class Doc Comment
 *
 * @category    Class */
 // @description Группа &#x60;Семья и дети&#x60; (+10 руб. к стоимости ответа)
/** 
 * @package     AnketologClient
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class CampaignTargetingSemyaIDeti implements ArrayAccess
{
    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'CampaignTargetingSemyaIDeti';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = array(
        'is_enable' => 'bool',
        'semeynoe_polozhenie' => 'string[]',
        'kolichestvo_chlenov_domohozyaystva' => 'string[]',
        'nalichie_detey' => 'string[]',
        'kolichestvo_detey' => 'string[]',
        'vozrast_detey_from' => 'string[]',
        'vozrast_detey_to' => 'string[]',
        'ozhidanie_detey' => 'string[]'
    );

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = array(
        'is_enable' => 'is_enable',
        'semeynoe_polozhenie' => 'semeynoe_polozhenie',
        'kolichestvo_chlenov_domohozyaystva' => 'kolichestvo_chlenov_domohozyaystva',
        'nalichie_detey' => 'nalichie_detey',
        'kolichestvo_detey' => 'kolichestvo_detey',
        'vozrast_detey_from' => 'vozrast_detey_from',
        'vozrast_detey_to' => 'vozrast_detey_to',
        'ozhidanie_detey' => 'ozhidanie_detey'
    );

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = array(
        'is_enable' => 'setIsEnable',
        'semeynoe_polozhenie' => 'setSemeynoePolozhenie',
        'kolichestvo_chlenov_domohozyaystva' => 'setKolichestvoChlenovDomohozyaystva',
        'nalichie_detey' => 'setNalichieDetey',
        'kolichestvo_detey' => 'setKolichestvoDetey',
        'vozrast_detey_from' => 'setVozrastDeteyFrom',
        'vozrast_detey_to' => 'setVozrastDeteyTo',
        'ozhidanie_detey' => 'setOzhidanieDetey'
    );

    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = array(
        'is_enable' => 'getIsEnable',
        'semeynoe_polozhenie' => 'getSemeynoePolozhenie',
        'kolichestvo_chlenov_domohozyaystva' => 'getKolichestvoChlenovDomohozyaystva',
        'nalichie_detey' => 'getNalichieDetey',
        'kolichestvo_detey' => 'getKolichestvoDetey',
        'vozrast_detey_from' => 'getVozrastDeteyFrom',
        'vozrast_detey_to' => 'getVozrastDeteyTo',
        'ozhidanie_detey' => 'getOzhidanieDetey'
    );

    public static function getters()
    {
        return self::$getters;
    }

    const SEMEYNOE_POLOZHENIE__0 = 'option_0';
    const SEMEYNOE_POLOZHENIE__1 = 'option_1';
    const SEMEYNOE_POLOZHENIE__2 = 'option_2';
    const SEMEYNOE_POLOZHENIE__3 = 'option_3';
    const SEMEYNOE_POLOZHENIE__4 = 'option_4';
    const SEMEYNOE_POLOZHENIE__5 = 'option_5';
    const KOLICHESTVO_CHLENOV_DOMOHOZYAYSTVA__0 = 'option_0';
    const KOLICHESTVO_CHLENOV_DOMOHOZYAYSTVA__1 = 'option_1';
    const KOLICHESTVO_CHLENOV_DOMOHOZYAYSTVA__2 = 'option_2';
    const KOLICHESTVO_CHLENOV_DOMOHOZYAYSTVA__3 = 'option_3';
    const KOLICHESTVO_CHLENOV_DOMOHOZYAYSTVA__4 = 'option_4';
    const NALICHIE_DETEY__0 = 'option_0';
    const NALICHIE_DETEY__1 = 'option_1';
    const KOLICHESTVO_DETEY__0 = 'option_0';
    const KOLICHESTVO_DETEY__1 = 'option_1';
    const KOLICHESTVO_DETEY__2 = 'option_2';
    const KOLICHESTVO_DETEY__3 = 'option_3';
    const VOZRAST_DETEY_FROM__0 = '0';
    const VOZRAST_DETEY_FROM__1 = '1';
    const VOZRAST_DETEY_FROM__2 = '2';
    const VOZRAST_DETEY_FROM__3 = '3';
    const VOZRAST_DETEY_FROM__4 = '4';
    const VOZRAST_DETEY_FROM__5 = '5';
    const VOZRAST_DETEY_FROM__6 = '6';
    const VOZRAST_DETEY_FROM__7 = '7';
    const VOZRAST_DETEY_FROM__8 = '8';
    const VOZRAST_DETEY_FROM__9 = '9';
    const VOZRAST_DETEY_FROM__10 = '10';
    const VOZRAST_DETEY_FROM__11 = '11';
    const VOZRAST_DETEY_FROM__12 = '12';
    const VOZRAST_DETEY_FROM__13 = '13';
    const VOZRAST_DETEY_FROM__14 = '14';
    const VOZRAST_DETEY_FROM__15 = '15';
    const VOZRAST_DETEY_FROM__16 = '16';
    const VOZRAST_DETEY_FROM__17 = '17';
    const VOZRAST_DETEY_FROM__18 = '18';
    const VOZRAST_DETEY_TO__0 = '0';
    const VOZRAST_DETEY_TO__1 = '1';
    const VOZRAST_DETEY_TO__2 = '2';
    const VOZRAST_DETEY_TO__3 = '3';
    const VOZRAST_DETEY_TO__4 = '4';
    const VOZRAST_DETEY_TO__5 = '5';
    const VOZRAST_DETEY_TO__6 = '6';
    const VOZRAST_DETEY_TO__7 = '7';
    const VOZRAST_DETEY_TO__8 = '8';
    const VOZRAST_DETEY_TO__9 = '9';
    const VOZRAST_DETEY_TO__10 = '10';
    const VOZRAST_DETEY_TO__11 = '11';
    const VOZRAST_DETEY_TO__12 = '12';
    const VOZRAST_DETEY_TO__13 = '13';
    const VOZRAST_DETEY_TO__14 = '14';
    const VOZRAST_DETEY_TO__15 = '15';
    const VOZRAST_DETEY_TO__16 = '16';
    const VOZRAST_DETEY_TO__17 = '17';
    const VOZRAST_DETEY_TO__18 = '18';
    const OZHIDANIE_DETEY__0 = 'option_0';
    const OZHIDANIE_DETEY__1 = 'option_1';
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getSemeynoePolozhenieAllowableValues()
    {
        return [
            self::SEMEYNOE_POLOZHENIE__0,
            self::SEMEYNOE_POLOZHENIE__1,
            self::SEMEYNOE_POLOZHENIE__2,
            self::SEMEYNOE_POLOZHENIE__3,
            self::SEMEYNOE_POLOZHENIE__4,
            self::SEMEYNOE_POLOZHENIE__5,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getKolichestvoChlenovDomohozyaystvaAllowableValues()
    {
        return [
            self::KOLICHESTVO_CHLENOV_DOMOHOZYAYSTVA__0,
            self::KOLICHESTVO_CHLENOV_DOMOHOZYAYSTVA__1,
            self::KOLICHESTVO_CHLENOV_DOMOHOZYAYSTVA__2,
            self::KOLICHESTVO_CHLENOV_DOMOHOZYAYSTVA__3,
            self::KOLICHESTVO_CHLENOV_DOMOHOZYAYSTVA__4,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getNalichieDeteyAllowableValues()
    {
        return [
            self::NALICHIE_DETEY__0,
            self::NALICHIE_DETEY__1,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getKolichestvoDeteyAllowableValues()
    {
        return [
            self::KOLICHESTVO_DETEY__0,
            self::KOLICHESTVO_DETEY__1,
            self::KOLICHESTVO_DETEY__2,
            self::KOLICHESTVO_DETEY__3,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getVozrastDeteyFromAllowableValues()
    {
        return [
            self::VOZRAST_DETEY_FROM__0,
            self::VOZRAST_DETEY_FROM__1,
            self::VOZRAST_DETEY_FROM__2,
            self::VOZRAST_DETEY_FROM__3,
            self::VOZRAST_DETEY_FROM__4,
            self::VOZRAST_DETEY_FROM__5,
            self::VOZRAST_DETEY_FROM__6,
            self::VOZRAST_DETEY_FROM__7,
            self::VOZRAST_DETEY_FROM__8,
            self::VOZRAST_DETEY_FROM__9,
            self::VOZRAST_DETEY_FROM__10,
            self::VOZRAST_DETEY_FROM__11,
            self::VOZRAST_DETEY_FROM__12,
            self::VOZRAST_DETEY_FROM__13,
            self::VOZRAST_DETEY_FROM__14,
            self::VOZRAST_DETEY_FROM__15,
            self::VOZRAST_DETEY_FROM__16,
            self::VOZRAST_DETEY_FROM__17,
            self::VOZRAST_DETEY_FROM__18,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getVozrastDeteyToAllowableValues()
    {
        return [
            self::VOZRAST_DETEY_TO__0,
            self::VOZRAST_DETEY_TO__1,
            self::VOZRAST_DETEY_TO__2,
            self::VOZRAST_DETEY_TO__3,
            self::VOZRAST_DETEY_TO__4,
            self::VOZRAST_DETEY_TO__5,
            self::VOZRAST_DETEY_TO__6,
            self::VOZRAST_DETEY_TO__7,
            self::VOZRAST_DETEY_TO__8,
            self::VOZRAST_DETEY_TO__9,
            self::VOZRAST_DETEY_TO__10,
            self::VOZRAST_DETEY_TO__11,
            self::VOZRAST_DETEY_TO__12,
            self::VOZRAST_DETEY_TO__13,
            self::VOZRAST_DETEY_TO__14,
            self::VOZRAST_DETEY_TO__15,
            self::VOZRAST_DETEY_TO__16,
            self::VOZRAST_DETEY_TO__17,
            self::VOZRAST_DETEY_TO__18,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getOzhidanieDeteyAllowableValues()
    {
        return [
            self::OZHIDANIE_DETEY__0,
            self::OZHIDANIE_DETEY__1,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = array();

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['is_enable'] = isset($data['is_enable']) ? $data['is_enable'] : null;
        $this->container['semeynoe_polozhenie'] = isset($data['semeynoe_polozhenie']) ? $data['semeynoe_polozhenie'] : null;
        $this->container['kolichestvo_chlenov_domohozyaystva'] = isset($data['kolichestvo_chlenov_domohozyaystva']) ? $data['kolichestvo_chlenov_domohozyaystva'] : null;
        $this->container['nalichie_detey'] = isset($data['nalichie_detey']) ? $data['nalichie_detey'] : null;
        $this->container['kolichestvo_detey'] = isset($data['kolichestvo_detey']) ? $data['kolichestvo_detey'] : null;
        $this->container['vozrast_detey_from'] = isset($data['vozrast_detey_from']) ? $data['vozrast_detey_from'] : null;
        $this->container['vozrast_detey_to'] = isset($data['vozrast_detey_to']) ? $data['vozrast_detey_to'] : null;
        $this->container['ozhidanie_detey'] = isset($data['ozhidanie_detey']) ? $data['ozhidanie_detey'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = array();
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        return true;
    }


    /**
     * Gets is_enable
     * @return bool
     */
    public function getIsEnable()
    {
        return $this->container['is_enable'];
    }

    /**
     * Sets is_enable
     * @param bool $is_enable Группа включена
     * @return $this
     */
    public function setIsEnable($is_enable)
    {
        $this->container['is_enable'] = $is_enable;

        return $this;
    }

    /**
     * Gets semeynoe_polozhenie
     * @return string[]
     */
    public function getSemeynoePolozhenie()
    {
        return $this->container['semeynoe_polozhenie'];
    }

    /**
     * Sets semeynoe_polozhenie
     * @param string[] $semeynoe_polozhenie Параметр `Семейное положение`  * `option_0` - Не женат/не замужем * `option_1` - Гражданский брак/ живут вместе * `option_2` - Женат/замужем, проживают вместе * `option_3` - Женат/замужем, проживают раздельно * `option_4` - Разведен/разведена * `option_5` - Вдовец/вдова
     * @return $this
     */
    public function setSemeynoePolozhenie($semeynoe_polozhenie)
    {
        $allowed_values = array('option_0', 'option_1', 'option_2', 'option_3', 'option_4', 'option_5');
        if (!in_array($semeynoe_polozhenie, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'semeynoe_polozhenie', must be one of 'option_0', 'option_1', 'option_2', 'option_3', 'option_4', 'option_5'");
        }
        $this->container['semeynoe_polozhenie'] = $semeynoe_polozhenie;

        return $this;
    }

    /**
     * Gets kolichestvo_chlenov_domohozyaystva
     * @return string[]
     */
    public function getKolichestvoChlenovDomohozyaystva()
    {
        return $this->container['kolichestvo_chlenov_domohozyaystva'];
    }

    /**
     * Sets kolichestvo_chlenov_domohozyaystva
     * @param string[] $kolichestvo_chlenov_domohozyaystva Параметр `Количество членов домохозяйства`  * `option_0` - живет один/одна * `option_1` - два * `option_2` - три * `option_3` - четыре * `option_4` - пять и более
     * @return $this
     */
    public function setKolichestvoChlenovDomohozyaystva($kolichestvo_chlenov_domohozyaystva)
    {
        $allowed_values = array('option_0', 'option_1', 'option_2', 'option_3', 'option_4');
        if (!in_array($kolichestvo_chlenov_domohozyaystva, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'kolichestvo_chlenov_domohozyaystva', must be one of 'option_0', 'option_1', 'option_2', 'option_3', 'option_4'");
        }
        $this->container['kolichestvo_chlenov_domohozyaystva'] = $kolichestvo_chlenov_domohozyaystva;

        return $this;
    }

    /**
     * Gets nalichie_detey
     * @return string[]
     */
    public function getNalichieDetey()
    {
        return $this->container['nalichie_detey'];
    }

    /**
     * Sets nalichie_detey
     * @param string[] $nalichie_detey Параметр `Наличие детей`  * `option_0` - есть * `option_1` - нет
     * @return $this
     */
    public function setNalichieDetey($nalichie_detey)
    {
        $allowed_values = array('option_0', 'option_1');
        if (!in_array($nalichie_detey, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'nalichie_detey', must be one of 'option_0', 'option_1'");
        }
        $this->container['nalichie_detey'] = $nalichie_detey;

        return $this;
    }

    /**
     * Gets kolichestvo_detey
     * @return string[]
     */
    public function getKolichestvoDetey()
    {
        return $this->container['kolichestvo_detey'];
    }

    /**
     * Sets kolichestvo_detey
     * @param string[] $kolichestvo_detey Параметр `Количество детей`  * `option_0` - один * `option_1` - два * `option_2` - три * `option_3` - четыре и более
     * @return $this
     */
    public function setKolichestvoDetey($kolichestvo_detey)
    {
        $allowed_values = array('option_0', 'option_1', 'option_2', 'option_3');
        if (!in_array($kolichestvo_detey, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'kolichestvo_detey', must be one of 'option_0', 'option_1', 'option_2', 'option_3'");
        }
        $this->container['kolichestvo_detey'] = $kolichestvo_detey;

        return $this;
    }

    /**
     * Gets vozrast_detey_from
     * @return string[]
     */
    public function getVozrastDeteyFrom()
    {
        return $this->container['vozrast_detey_from'];
    }

    /**
     * Sets vozrast_detey_from
     * @param string[] $vozrast_detey_from Параметр `Возраст детей от`  * `0` - 0 * `1` - 1 * `2` - 2 * `3` - 3 * `4` - 4 * `5` - 5 * `6` - 6 * `7` - 7 * `8` - 8 * `9` - 9 * `10` - 10 * `11` - 11 * `12` - 12 * `13` - 13 * `14` - 14 * `15` - 15 * `16` - 16 * `17` - 17 * `18` - 18
     * @return $this
     */
    public function setVozrastDeteyFrom($vozrast_detey_from)
    {
        $allowed_values = array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18');
        if (!in_array($vozrast_detey_from, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'vozrast_detey_from', must be one of '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18'");
        }
        $this->container['vozrast_detey_from'] = $vozrast_detey_from;

        return $this;
    }

    /**
     * Gets vozrast_detey_to
     * @return string[]
     */
    public function getVozrastDeteyTo()
    {
        return $this->container['vozrast_detey_to'];
    }

    /**
     * Sets vozrast_detey_to
     * @param string[] $vozrast_detey_to Параметр `Возраст детей до`  * `0` - 0 * `1` - 1 * `2` - 2 * `3` - 3 * `4` - 4 * `5` - 5 * `6` - 6 * `7` - 7 * `8` - 8 * `9` - 9 * `10` - 10 * `11` - 11 * `12` - 12 * `13` - 13 * `14` - 14 * `15` - 15 * `16` - 16 * `17` - 17 * `18` - 18
     * @return $this
     */
    public function setVozrastDeteyTo($vozrast_detey_to)
    {
        $allowed_values = array('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18');
        if (!in_array($vozrast_detey_to, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'vozrast_detey_to', must be one of '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18'");
        }
        $this->container['vozrast_detey_to'] = $vozrast_detey_to;

        return $this;
    }

    /**
     * Gets ozhidanie_detey
     * @return string[]
     */
    public function getOzhidanieDetey()
    {
        return $this->container['ozhidanie_detey'];
    }

    /**
     * Sets ozhidanie_detey
     * @param string[] $ozhidanie_detey Параметр `Ожидание детей (беременность)`  * `option_0` - ждет ребенка * `option_1` - не ждет ребенка
     * @return $this
     */
    public function setOzhidanieDetey($ozhidanie_detey)
    {
        $allowed_values = array('option_0', 'option_1');
        if (!in_array($ozhidanie_detey, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'ozhidanie_detey', must be one of 'option_0', 'option_1'");
        }
        $this->container['ozhidanie_detey'] = $ozhidanie_detey;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\AnketologClient\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\AnketologClient\ObjectSerializer::sanitizeForSerialization($this));
    }
}


